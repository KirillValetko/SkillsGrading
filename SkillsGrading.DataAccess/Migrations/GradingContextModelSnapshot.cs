// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillsGrading.DataAccess.Infrastructure;

#nullable disable

namespace SkillsGrading.DataAccess.Migrations
{
    [DbContext(typeof(GradingContext))]
    partial class GradingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillGrading.DataAccess.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GraderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GraderId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GradeDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GradeTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("NewGradeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GradeTemplateId");

                    b.HasIndex("NewGradeLevelId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.GradeLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GradeRevisionInMonths")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelValue")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GradeLevels");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.GradeTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GradeTemplates");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.GradedSkillSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GradeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GradeLevelPosition")
                        .HasColumnType("int");

                    b.Property<Guid>("GradeTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SkillPosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeLevelId");

                    b.HasIndex("GradeTemplateId");

                    b.HasIndex("SkillId");

                    b.ToTable("GradedSkillSets");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.SkillGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SkillGroups");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.SkillLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("SkillLevels");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.Employee", b =>
                {
                    b.HasOne("SkillGrading.DataAccess.Models.Employee", "Grader")
                        .WithOne()
                        .HasForeignKey("SkillGrading.DataAccess.Models.Employee", "GraderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Grader");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.Grade", b =>
                {
                    b.HasOne("SkillGrading.DataAccess.Models.Employee", "Employee")
                        .WithMany("Grades")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillGrading.DataAccess.Models.GradeTemplate", "GradeTemplate")
                        .WithMany("Grades")
                        .HasForeignKey("GradeTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillGrading.DataAccess.Models.GradeLevel", "GradeLevel")
                        .WithMany("Grades")
                        .HasForeignKey("NewGradeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("GradeLevel");

                    b.Navigation("GradeTemplate");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.GradedSkillSet", b =>
                {
                    b.HasOne("SkillGrading.DataAccess.Models.GradeLevel", "GradeLevel")
                        .WithMany("GradedSkillSets")
                        .HasForeignKey("GradeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillGrading.DataAccess.Models.GradeTemplate", "GradeTemplate")
                        .WithMany("GradedSkillSets")
                        .HasForeignKey("GradeTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillGrading.DataAccess.Models.SkillLevel", "SkillLevel")
                        .WithMany("GradedSkillSets")
                        .HasForeignKey("GradeTemplateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SkillGrading.DataAccess.Models.Skill", "Skill")
                        .WithMany("GradedSkillSets")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GradeLevel");

                    b.Navigation("GradeTemplate");

                    b.Navigation("Skill");

                    b.Navigation("SkillLevel");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.Skill", b =>
                {
                    b.HasOne("SkillGrading.DataAccess.Models.SkillGroup", "SkillGroup")
                        .WithMany("Skills")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkillGroup");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.SkillLevel", b =>
                {
                    b.HasOne("SkillGrading.DataAccess.Models.SkillGroup", "SkillGroup")
                        .WithMany("SkillLevels")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkillGroup");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.Employee", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.GradeLevel", b =>
                {
                    b.Navigation("GradedSkillSets");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.GradeTemplate", b =>
                {
                    b.Navigation("GradedSkillSets");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.Skill", b =>
                {
                    b.Navigation("GradedSkillSets");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.SkillGroup", b =>
                {
                    b.Navigation("SkillLevels");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("SkillGrading.DataAccess.Models.SkillLevel", b =>
                {
                    b.Navigation("GradedSkillSets");
                });
#pragma warning restore 612, 618
        }
    }
}
